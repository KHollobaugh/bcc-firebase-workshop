service cloud.firestore {
  match /databases/{database}/documents {
    match /breweries/{breweryId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
      allow update, delete: if isOwner(resource.data.uid) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
    }

    match /breweries/{breweryId}/reviews/{reviewId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() &&
      exists(/databases/$(database)/documents/reviewMapping/$(breweryId + '_' + request.auth.uid)) == false &&
      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
      allow update, delete: if isOwner(resource.data.uid) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
    }

    match /reviewMapping/{reviewMappingId} {
      allow read, create: if isSignedIn();
      allow create: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow update, delete: if isOwner(userId) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
    }

    match /users/{userId}/reviews/{reviewId} {
      allow read: if isSignedIn();
      allow update, delete: if isOwner(userId) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.locked == false;
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }

  function isOwner(uid) {
    return request.auth.uid == uid;
  }
}
